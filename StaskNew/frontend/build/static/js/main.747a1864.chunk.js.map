{"version":3,"sources":["hoc/Layout/Layout.css","components/Home/Home.css","components/Auth/Auth.css","App.css","components/Header/Header.css","components/Header/Header.js","hoc/Layout/Layout.js","components/Home/Home.js","components/Auth/Auth.js","App.js","serviceWorker.js","store/reducers/auth.js","store/reducers/rootReducer.js","store/actions/actionTypes.js","index.js"],"names":["module","exports","Header","props","className","id","href","Layout","classes","this","children","React","Component","connect","state","Home","withRouter","dispatch","Auth","App","routes","path","component","exact","to","Boolean","window","location","hostname","match","initialState","token","combineReducers","auth","action","type","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wFACAA,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,qB,4ECAzBD,EAAOC,QAAU,CAAC,IAAM,mB,mBCAxBD,EAAOC,QAAU,CAAC,OAAS,yB,iJCwBZC,G,MAtBA,SAAAC,GACX,OACI,yBAAKC,UAAU,iDACX,yBAAKA,UAAU,2BAA2BC,GAAG,0BACzC,wBAAID,UAAU,sBACV,wBAAIA,UAAU,YACV,uBAAGA,UAAU,WAAWE,KAAK,KAA7B,QAAsC,0BAAMF,UAAU,WAAhB,gBAG9C,wBAAIA,UAAU,2BACV,wBAAIA,UAAU,YACV,uBAAGA,UAAU,WAAWE,KAAK,KAA7B,sEAA6C,0BAAMF,UAAU,WAAhB,eAEjD,wBAAIA,UAAU,YACV,uBAAGA,UAAU,WAAWE,KAAK,KAA7B,sEAA6C,0BAAMF,UAAU,WAAhB,oBCZ/DG,E,uKAEE,OACI,yBAAKH,UAAWI,IAAQD,OAAS,cAC7B,kBAAC,EAAD,MAEA,8BACKE,KAAKN,MAAMO,e,GAPXC,IAAMC,WAoBZC,mBANf,SAAyBC,GACrB,MAAO,KAKID,CAAyBN,G,yBCpBlCQ,E,uKAEE,OACI,yBAAKX,UAAWI,IAAQO,MACpB,uD,GAJGH,aAsBJI,kBAAWH,aAZ1B,SAAyBC,GACxB,MAAO,MAKR,SAA4BG,GAC3B,MAAO,KAKkBJ,CAA6CE,I,iBCbxDG,E,uKATP,OACI,yBAAKd,UAAWI,IAAQU,W,GAHjBN,aCKbO,E,uKAEJ,IAAIC,EACH,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOC,KAAK,QAAQC,UAAWJ,IAC/B,kBAAC,IAAD,CAAOK,OAAK,EAACF,KAAK,IAAIC,UAAWP,IACjC,kBAAC,IAAD,CAAUS,GAAI,OAahB,OACC,kBAAC,EAAD,KACEJ,O,GArBaT,IAAMC,WAuCTI,kBAAWH,aAZ1B,SAAyBC,GACxB,MAAO,MAKR,SAA4BG,GAC3B,MAAO,KAKkBJ,CAA6CM,ICnCnDM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,4BChBAC,EAAe,CACjBC,MAAO,MCAIC,kBAAgB,CAC3BC,KDEW,WAAoD,IAA/BnB,EAA8B,uDAAtBgB,EAAcI,EAAQ,uCAC9D,OAAQA,EAAOC,MACX,IERoB,eFShB,OAAO,2BACArB,GADP,IAEIiB,MAAOG,EAAOH,QAEtB,IEZmB,cFaf,OAAO,2BACAjB,GADP,IAEIiB,MAAO,OAEf,QACI,OAAOjB,M,QGRbsB,EACc,kBAAXV,QACPA,OAAOW,qCACLX,OAAOW,qCAAqC,IAEvCC,IAEHC,EAAQC,YACbC,EACAL,EACCM,YAAgBC,OAIlBC,IAASC,OACR,kBAAC,IAAD,CAAUN,MAAOA,GAChB,kBAAC,IAAD,KACC,kBAAC,EAAD,QAGFO,SAASC,eAAe,SJoGnB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.747a1864.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__3Glqr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Home\":\"Home_Home__27h3f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__DhNf9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3MMMQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__1eyLK\"};","import React from 'react'\r\nimport classes from './Header.css'\r\n\r\nconst Header = props => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"/\">Logo <span className=\"sr-only\">(current)</span></a>\r\n                    </li>\r\n                </ul>\r\n                <ul className=\"navbar-nav my-2 my-lg-0\">\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"/\">Авторизация <span className=\"sr-only\">(current)</span></a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"/\">Регистрация <span className=\"sr-only\">(current)</span></a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport classes from './Layout.css';\r\nimport { connect } from 'react-redux';\r\nimport Header from '../../components/Header/Header';\r\n\r\nclass Layout extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className={classes.Layout + \" container\"}>\r\n                <Header />\r\n\r\n                <main>\r\n                    {this.props.children}\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        \r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Layout);","import React, { Component } from 'react'\r\nimport classes from './Home.css'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <div className={classes.Home}>\r\n                <h1>This is Home page!</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n\treturn {\r\n\t\t\r\n\t};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n\treturn {\r\n\t\t\r\n\t};\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Home));","import React, { Component } from 'react'\r\nimport classes from './Auth.css'\r\n\r\nclass Auth extends Component {\r\n    render() {\r\n        return (\r\n            <div className={classes.Auth}>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Auth;","import React from 'react'\nimport './App.css'\nimport Layout from './hoc/Layout/Layout'\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport Home from './components/Home/Home'\nimport Auth from './components/Auth/Auth'\n\nclass App extends React.Component {\n\trender() {\n\t\tlet routes = (\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/auth\" component={Auth} />\n\t\t\t\t<Route exact path=\"/\" component={Home} />\n\t\t\t\t<Redirect to={\"/\"} />\n\t\t\t</Switch>\n\t\t);\n\t\t/*\n\t\tif (this.props.isAuthenticated) {\n\t\t\troutes = (\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/\" exact component={QuizList} />\n\t\t\t\t\t<Redirect to={\"/\"} />\n\t\t\t\t</Switch>\n\t\t\t);\n\t\t} */\n\n\t\treturn (\n\t\t\t<Layout>\n\t\t\t\t{routes}\n\t\t\t</Layout>\n\t\t);\n\t}\n}\n\nfunction mapStateToProps(state) {\n\treturn {\n\t\t\n\t};\n}\n\nfunction mapDispatchToProps(dispatch) {\n\treturn {\n\t\t\n\t};\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { AUTH_SUCCESS, AUTH_LOGOUT } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    token: null\r\n}\r\n\r\nexport default function authReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case AUTH_SUCCESS:\r\n            return {\r\n                ...state,\r\n                token: action.token\r\n            };\r\n        case AUTH_LOGOUT:\r\n            return {\r\n                ...state,\r\n                token: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport auth from './auth';\r\n\r\nexport default combineReducers({\r\n    auth,\r\n})","export const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider }\tfrom \"react-redux\";\nimport rootReducer from './store/reducers/rootReducer.js';\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers =\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n    }) : compose;\n\nconst store = createStore(\n\trootReducer,\n\tcomposeEnhancers(\n\t\tapplyMiddleware(thunk)\n\t)\n);\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<BrowserRouter>\n\t\t\t<App />\n\t\t</BrowserRouter>\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}